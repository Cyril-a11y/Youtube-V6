name: Main

on:
  workflow_dispatch:

permissions:
  contents: write  # Autorise les push vers le dépôt

concurrency:
  group: main-cycle
  cancel-in-progress: true

jobs:
  process_and_play:
    runs-on: ubuntu-latest

    steps:
      # 1. Récupérer le code du dépôt
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Installer Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3. Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Charger les secrets dans l'environnement
      - name: Load secrets into environment
        run: |
          echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> $GITHUB_ENV
          echo "YOUTUBE_VIDEO_ID=${{ secrets.YOUTUBE_VIDEO_ID }}" >> $GITHUB_ENV
          echo "LICHESS_HUMAN_TOKEN=${{ secrets.LICHESS_HUMAN_TOKEN }}" >> $GITHUB_ENV
          echo "LICHESS_BOT_TOKEN=${{ secrets.LICHESS_BOT_TOKEN }}" >> $GITHUB_ENV

      # 5. Récupérer et sélectionner le coup blanc
      - name: Process comments and select white move
        run: python 03_process_comments.py
        continue-on-error: true

      # 6. Commit coup_blanc.txt (si modifié)
      - name: Commit coup_blanc.txt
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git pull --rebase origin main || true
          git add data/coup_blanc.txt
          git diff --cached --quiet || git commit -m "Update coup_blanc.txt [skip ci]"
          git push --force-with-lease origin main

      # 7. Jouer le coup blanc
      - name: Play white move
        run: python 04_play_white.py
        continue-on-error: true

      # 8. Jouer le coup noir (Stockfish bot)
      - name: Play black move
        run: python 05_play_black.py
        continue-on-error: true

      # 9. Commit et push tous les fichiers mis à jour (si modifiés)
      - name: Commit updated game data
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git pull --rebase origin main || true
          git add data/position.fen data/dernier_coup.json data/move_history.json || true
          git diff --cached --quiet || git commit -m "Update game state after moves [skip ci]"
          git push --force-with-lease origin main
