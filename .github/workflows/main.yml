name: Main

on:
  workflow_dispatch:

permissions:
  contents: write        # push commits
  actions: write         # allow workflow_dispatch from Python (GitHub API)

concurrency:
  group: main-cycle
  cancel-in-progress: true

jobs:
  process_and_play:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3) Deps
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4) Ensure data dir (avoid first-run errors)
      - name: Ensure data folder exists
        run: mkdir -p data

      # 5) Secrets → env
      - name: Load secrets into environment
        run: |
          echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> $GITHUB_ENV
          echo "YOUTUBE_VIDEO_ID=${{ secrets.YOUTUBE_VIDEO_ID }}" >> $GITHUB_ENV
          echo "LICHESS_HUMAN_TOKEN=${{ secrets.LICHESS_HUMAN_TOKEN }}" >> $GITHUB_ENV
          echo "LICHESS_BOT_TOKEN=${{ secrets.LICHESS_BOT_TOKEN }}" >> $GITHUB_ENV
          echo "GH_WORKFLOW_TOKEN=${{ secrets.GH_WORKFLOW_TOKEN }}" >> $GITHUB_ENV

      # 6) Comments → select white move
      - name: Process comments and select white move
        run: python 03_process_comments.py
        continue-on-error: true

      # 7) Commit coup_blanc.txt (only if changed)
      - name: Commit coup_blanc.txt
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git stash --include-untracked || true
          git pull --rebase origin main || true
          git stash pop || true
          git add data/coup_blanc.txt
          git diff --cached --quiet || git commit -m "Update coup_blanc.txt [skip ci]"
          git push --force-with-lease origin main

      # 8) Play white move
      - name: Play white move
        run: python 04_play_white.py
        continue-on-error: true

      # (tiny delay helps Lichess update state)
      - name: Short sync delay
        run: sleep 3

      # 9) Play black move (dispatch run_bot.yml via GH_WORKFLOW_TOKEN)
      - name: Play black move
        run: python 05_play_black.py
        continue-on-error: true

      # 10) Commit updated game data (only if changed)
      - name: Commit updated game data
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git stash --include-untracked || true
          git pull --rebase origin main || true
          git stash pop || true
          git add data/position.fen data/dernier_coup.json data/move_history.json || true
          git diff --cached --quiet || git commit -m "Update game state after moves [skip ci]"
          git push --force-with-lease origin main

      # 11) Generate black SVG from latest position
      - name: Generate black SVG
        run: python 06_generate_black_svg.py
        continue-on-error: true

      # 12) Commit generated SVG (only if changed)
      - name: Commit SVG thumbnail
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git stash --include-untracked || true
          git pull --rebase origin main || true
          git stash pop || true
          git add data/thumbnail_black.svg
          git diff --cached --quiet || git commit -m "Update black thumbnail [skip ci]"
          git push --force-with-lease origin main
