name: Create Lichess game 

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: create-game
  cancel-in-progress: true

jobs:
  create_game:
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure data folder exists
        run: mkdir -p data

      - name: Load secrets into environment
        run: |
          echo "LICHESS_HUMAN_TOKEN=${{ secrets.LICHESS_HUMAN_TOKEN }}" >> $GITHUB_ENV
          echo "LICHESS_BOT_TOKEN=${{ secrets.LICHESS_BOT_TOKEN }}" >> $GITHUB_ENV
          echo "LICHESS_BOT_USERNAME=${{ secrets.LICHESS_BOT_USERNAME }}" >> $GITHUB_ENV

      - name: Create game on Lichess
        run: python 01_create_game.py

      - name: Reset game data (only if creation succeeded)
        if: success()
        run: |
          python - <<'PY'
          import json
          from datetime import datetime, timezone
          import chess
          from pathlib import Path

          DATA_DIR = Path("data")
          DATA_DIR.mkdir(exist_ok=True)

          starting_fen = chess.STARTING_FEN

          # coup_blanc.txt vide
          (DATA_DIR / "coup_blanc.txt").write_text("", encoding="utf-8")

          # historique.txt vide
          (DATA_DIR / "historique.txt").write_text("", encoding="utf-8")

          # position.fen = position initiale
          (DATA_DIR / "position.fen").write_text(starting_fen, encoding="utf-8")

          # dernier_coup.json avec date + position initiale
          payload = {
              "dernier_coup": None,
              "fen": starting_fen,
              "horodatage": datetime.now(timezone.utc).isoformat()
          }
          (DATA_DIR / "dernier_coup.json").write_text(
              json.dumps(payload, ensure_ascii=False, indent=2),
              encoding="utf-8"
          )

          # move_history.json vide
          (DATA_DIR / "move_history.json").write_text(
              json.dumps([], ensure_ascii=False, indent=2),
              encoding="utf-8"
          )
          PY

      - name: Debug data directory
        run: |
          ls -la data || true
          echo "game_id:"; test -f data/game_id.txt && cat data/game_id.txt || echo "missing"
          echo "fen:"; test -f data/position.fen && head -n1 data/position.fen || echo "missing"
          echo "last:"; test -f data/dernier_coup.json && cat data/dernier_coup.json || echo "missing"
          echo "history:"; test -f data/move_history.json && cat data/move_history.json || echo "missing"
          echo "historique:"; test -f data/historique.txt && head -n5 data/historique.txt || echo "missing"

      - name: Commit & push game data
        if: success()
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git fetch origin "$BRANCH"
          git pull --rebase origin "$BRANCH" || true
          git add -f data/game_id.txt data/position.fen data/dernier_coup.json data/coup_blanc.txt data/move_history.json data/historique.txt || true
          git commit -m "Init game data with starting FEN" || echo "No changes"
          git push --force-with-lease origin HEAD:"$BRANCH"
